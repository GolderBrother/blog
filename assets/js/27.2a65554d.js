(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{408:function(t,s,a){t.exports=a.p+"assets/img/react15-lifecycle.d29aad09.png"},409:function(t,s,a){t.exports=a.p+"assets/img/react16.4-lifecycle.52f570bb.png"},616:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"react-v16-0-前的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-v16-0-前的生命周期"}},[t._v("#")]),t._v(" React v16.0 前的生命周期")]),t._v(" "),n("p",[t._v("其实大部分团队不见得会跟进升到 16 版本，所以 16 前的生命周期还是很有必要掌握的，何况 16 也是基于之前的修改")]),t._v(" "),n("p",[n("img",{attrs:{src:a(408),alt:"react15-lifecycle"}})]),t._v(" "),n("h2",{attrs:{id:"第一个是组件初始化-initialization-阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一个是组件初始化-initialization-阶段"}},[t._v("#")]),t._v(" 第一个是组件初始化(initialization)阶段")]),t._v(" "),n("p",[t._v("也就是以下代码中类的构造方法( "),n("code",[t._v("constructor()")]),t._v(" ),"),n("code",[t._v("Test")]),t._v(" 类继承了 "),n("code",[t._v("react Component")]),t._v(" 这个"),n("strong",[t._v("基类")]),t._v("，也就继承这个 · 的"),n("strong",[t._v("基类")]),t._v("，才能有 "),n("code",[t._v("render()")]),t._v(",生命周期等方法可以使用，这也说明为什么"),n("code",[t._v("函数组件不能使用这些方法的原因")]),t._v("。")]),t._v(" "),n("p",[n("code",[t._v("super(props)")]),t._v("用来调用基类的构造方法( "),n("code",[t._v("constructor()")]),t._v(" ), 也将父组件的 props 注入给子组件，功子组件读取(组件中 "),n("code",[t._v("props")]),t._v(" "),n("strong",[t._v("只读不可变")]),t._v("，· 可变)。\n而"),n("code",[t._v("constructor()")]),t._v("用来做一些组件的初始化工作，如定义 this.state 的初始内容。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Component "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"第二个是组件的挂载-mounting-阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二个是组件的挂载-mounting-阶段"}},[t._v("#")]),t._v(" 第二个是组件的挂载(Mounting)阶段")]),t._v(" "),n("h2",{attrs:{id:"此阶段分为-componentwillmount，render，componentdidmount-三个时期。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#此阶段分为-componentwillmount，render，componentdidmount-三个时期。"}},[t._v("#")]),t._v(" 此阶段分为 componentWillMount，render，componentDidMount 三个时期。")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("componentWillMount")]),t._v(":\n在组件挂载到 DOM 前调用，且只会被调用一次，在这边调用 "),n("code",[t._v("this.setState")]),t._v(" 不会引起组件重新渲染，也可以把写在这边的内容提前到 constructor()中，所以项目中很少用。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("render")]),t._v(":\n根据组件的 "),n("code",[t._v("props")]),t._v(" 和 "),n("code",[t._v("state")]),t._v("（无两者的重传递和重赋值，论值是否有变化，都可以引起组件重新 "),n("code",[t._v("render")]),t._v("） ，return 一个 React 元素（描述组件，即 UI），不负责组件实际渲染工作，之后由 React 自身根据此元素去渲染出页面 DOM。render 是纯函数（Pure function：函数的返回结果只依赖于它的参数；函数执行过程里面没有副作用），不能在里面执行 this.setState，会有改变组件状态的副作用。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("componentDidMount")]),t._v(":\n组件挂载到 DOM 后调用，且只会被调用一次")])])]),t._v(" "),n("h2",{attrs:{id:"第三个是组件的更新-update-阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第三个是组件的更新-update-阶段"}},[t._v("#")]),t._v(" 第三个是组件的更新(update)阶段")]),t._v(" "),n("p",[t._v("在讲述此阶段前需要先明确下 "),n("code",[t._v("react")]),t._v(" 组件"),n("strong",[t._v("更新机制")]),t._v("。"),n("code",[t._v("setState")]),t._v(" 引起的 "),n("code",[t._v("state")]),t._v(" 更新或父组件重新 "),n("code",[t._v("render")]),t._v(" 引起的 "),n("code",[t._v("props")]),t._v(" 更新，更新后的 "),n("code",[t._v("state")]),t._v(" 和 "),n("code",[t._v("props")]),t._v(" 相对之前无论是否有变化，都将引起子组件的重新 "),n("code",[t._v("render")]),t._v("。"),n("a",{attrs:{href:"https://www.cnblogs.com/penghuwan/p/6707254.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("详细可看这篇文章"),n("OutboundLink")],1)]),t._v(" "),n("h3",{attrs:{id:"造成组件更新有两类（三种）情况："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#造成组件更新有两类（三种）情况："}},[t._v("#")]),t._v(" 造成组件更新有两类（三种）情况：")]),t._v(" "),n("p",[t._v("1.父组件重新 "),n("code",[t._v("render")]),t._v(" 引起子组件重新 "),n("code",[t._v("render")]),t._v(" 的情况有两种，内容及代码修引自"),n("a",{attrs:{href:"https://segmentfault.com/q/1010000006019858",target:"_blank",rel:"noopener noreferrer"}},[t._v("xiaoyann 的回答"),n("OutboundLink")],1)]),t._v(" "),n("ul",[n("li",[t._v("a. 直接使用,每当父组件重新 "),n("code",[t._v("render")]),t._v(" 导致的重传 props，子组件将直接跟着重新渲染，无论 props 是否有变化。可通过 shouldComponentUpdate 方法优化")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应该使用这个方法，否则无论props是否有变化都将会导致组件跟着重新渲染")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("ul",[n("li",[t._v("b.在 "),n("code",[t._v("componentWillReceiveProps")]),t._v(" 方法中，将 "),n("code",[t._v("props")]),t._v(" 转换成自己的 "),n("code",[t._v("state")])])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      someThings"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("componentWillReceiveProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextProps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 父组件重传props时就会调用这个方法")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" someThings"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" nextProps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("根据官网的描述")]),t._v(" "),n("blockquote",[n("p",[t._v("在该函数(componentWillReceiveProps)中调用 this.setState() 将不会引起第二次渲染。")])]),t._v(" "),n("p",[t._v("是因为 "),n("code",[t._v("componentWillReceiveProps")]),t._v(" 中判断 "),n("code",[t._v("props")]),t._v(" 是否变化了，若变化了，"),n("code",[t._v("this.setState")]),t._v(" 将引起 "),n("code",[t._v("state")]),t._v(" 变化，从而引起 render，此时就没必要再做第二次因重传 "),n("code",[t._v("props")]),t._v(" 引起的 render 了，不然重复做一样的渲染了")]),t._v(" "),n("ul",[n("li",[t._v("2.组件本身调用 "),n("code",[t._v("setState")]),t._v("，无论 "),n("code",[t._v("state")]),t._v(" 有没有变化。可通过 "),n("code",[t._v("shouldComponentUpdate")]),t._v(" 方法优化。")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Child")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      someThings"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("shouldComponentUpdate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextStates")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 应该使用这个方法，否则无论state是否有变化都将会导致组件重新渲染")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nextStates"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleClick")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 虽然调用了setState ，但state并无变化")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" preSomeThings "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      someThings"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" preSomeThings\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("render")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div onClick"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("handleClick"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someThings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"此阶段分为-componentwillreceiveprops，shouldcomponentupdate，componentwillupdate，render，componentdidupdate"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#此阶段分为-componentwillreceiveprops，shouldcomponentupdate，componentwillupdate，render，componentdidupdate"}},[t._v("#")]),t._v(" 此阶段分为 componentWillReceiveProps，shouldComponentUpdate，componentWillUpdate，render，componentDidUpdate")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("componentWillReceiveProps(nextProps)")]),t._v("\n此方法只调用于 props 引起的组件更新过程中，参数 nextProps 是父组件传给当前组件的新 "),n("code",[t._v("props")]),t._v("。但父组件 "),n("code",[t._v("render")]),t._v(" 方法的调用不能保证重传给当前组件的 props 是有变化的，所以在此方法中根据 "),n("code",[t._v("nextProps")]),t._v(" 和 "),n("code",[t._v("this.props")]),t._v(" 来查明重传的 "),n("code",[t._v("props")]),t._v(" 是否改变，以及如果改变了要执行啥，比如根据新的 "),n("code",[t._v("props")]),t._v(" 调用 "),n("code",[t._v("this.setState")]),t._v(" 出发当前组件的重新 "),n("code",[t._v("render")])]),t._v(" "),n("li",[n("code",[t._v("shouldComponentUpdate(nextProps, nextState)")]),t._v("\n此方法通过比较 n"),n("code",[t._v("extProps")]),t._v("，"),n("code",[t._v("nextState")]),t._v(" 及当前组件的 "),n("code",[t._v("this.props")]),t._v("，"),n("code",[t._v("this.state")]),t._v("，返回 "),n("code",[t._v("true")]),t._v(" 时当前组件将继续执行更新过程，返回 "),n("code",[t._v("false")]),t._v(" 则当前组件更新停止，以此可用来减少组件的不必要渲染，优化组件性能。")])]),t._v(" "),n("p",[t._v("ps：这边也可以看出，就算 "),n("code",[t._v("componentWillReceiveProps()")]),t._v("中执行了 "),n("code",[t._v("this.setState")]),t._v("，更新了 "),n("code",[t._v("state")]),t._v("，但在 "),n("code",[t._v("render")]),t._v(" 前（如 "),n("code",[t._v("shouldComponentUpdate，componentWillUpdate")]),t._v("），"),n("code",[t._v("this.state")]),t._v(" 依然指向更新前的 "),n("code",[t._v("state")]),t._v("，不然 "),n("code",[t._v("nextState")]),t._v(" 及当前组件的 "),n("code",[t._v("this.state")]),t._v(" 的对比就一直是 "),n("code",[t._v("false")]),t._v(" 了。")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("componentWillUpdate(nextProps, nextState)")]),t._v("\n此方法在调用 "),n("code",[t._v("render")]),t._v(" 方法前执行，在这边可执行一些组件更新发生前的工作，一般较少用。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("render")]),t._v(" "),n("code",[t._v("render")]),t._v(" 方法在上文讲过，这边只是重新调用。")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("componentDidUpdate(prevProps, prevState)")]),t._v("\n此方法在组件更新后被调用，可以操作组件更新的 "),n("code",[t._v("DOM")]),t._v("，"),n("code",[t._v("prevProps")]),t._v(" 和 "),n("code",[t._v("prevState")]),t._v(" 这两个参数指的是组件更新前的 "),n("code",[t._v("props")]),t._v(" 和 "),n("code",[t._v("state")])])])]),t._v(" "),n("h3",{attrs:{id:"卸载阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#卸载阶段"}},[t._v("#")]),t._v(" 卸载阶段")]),t._v(" "),n("p",[t._v("此阶段只有一个生命周期方法："),n("code",[t._v("componentWillUnmount")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("componentWillUnmount")]),t._v("\n此方法在组件被卸载前调用，可以在这里执行一些清理工作，比如清楚组件中使用的定时器，清楚 "),n("code",[t._v("componentDidMount")]),t._v(" 中手动创建的 "),n("code",[t._v("DOM")]),t._v(" 元素等，以避免引起"),n("strong",[t._v("内存泄漏")]),t._v("。")])]),t._v(" "),n("h3",{attrs:{id:"react-v16-4-的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-v16-4-的生命周期"}},[t._v("#")]),t._v(" React v16.4 的生命周期")]),t._v(" "),n("p",[n("img",{attrs:{src:a(409),alt:"react15-lifecycle"}})]),t._v(" "),n("h2",{attrs:{id:"最后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),n("p",[t._v("文中若有不准确或错误的地方，欢迎指出，有兴趣可以的关注下"),n("a",{attrs:{href:"https://github.com/GolderBrother",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),n("OutboundLink")],1),t._v("~")])])}),[],!1,null,null,null);s.default=e.exports}}]);