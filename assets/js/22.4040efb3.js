(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{384:function(t,s,a){t.exports=a.p+"assets/img/20200505110750.4b790e87.jpg"},385:function(t,s,a){t.exports=a.p+"assets/img/20200505110953.15329dea.jpg"},386:function(t,s,a){t.exports=a.p+"assets/img/20200505111143.8872ceba.png"},606:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"项目不知道如何做性能优化？不妨试试代码分割吧"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目不知道如何做性能优化？不妨试试代码分割吧"}},[t._v("#")]),t._v(" 项目不知道如何做性能优化？不妨试试代码分割吧")]),t._v(" "),n("h2",{attrs:{id:"一、web-应用性能优化的关键"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、web-应用性能优化的关键"}},[t._v("#")]),t._v(" 一、Web 应用性能优化的关键")]),t._v(" "),n("p",[t._v("关于 "),n("code",[t._v("Web")]),t._v(" 应用性能优化，有一点是毫无疑问的："),n("strong",[t._v("「页面加载越久，用户体验就越差」")]),t._v("。我们几乎可以说 "),n("code",[t._v("Web")]),t._v(" 应用性能优化的关键之处就在于："),n("strong",[t._v("减少页面初载时，所需加载资源的「数量」和「体积」")]),t._v("。")]),t._v(" "),n("p",[t._v("那么当所需加载的资源数量到达多少或资源大小小于多少，我们才可以自信地宣称我们的 Web 应用拥有出色的性能呢？")]),t._v(" "),n("p",[t._v("下面是我给出的一个参考值，该参考值考虑到了移动端与国外等多种访问环境：")]),t._v(" "),n("p",[t._v("页面初载时，所有未压缩的 "),n("code",[t._v("JavaScript")]),t._v(" 脚本大小："),n("code",[t._v("<=200KB")]),t._v("；\n页面初载时，所有未压缩的 "),n("code",[t._v("CSS")]),t._v(" 资源大小："),n("code",[t._v("<=100K")]),t._v("B；\n"),n("code",[t._v("HTTP")]),t._v(" 协议下，请求资源数："),n("code",[t._v("<=6")]),t._v(" 个；\n"),n("code",[t._v("HTTP/2")]),t._v(" 协议下，请求资源数："),n("code",[t._v("<=20")]),t._v(" 个 ；\n"),n("code",[t._v("90%")]),t._v("的代码利用率（也就是说，仅允许 "),n("code",[t._v("10%")]),t._v(" 的未使用代码）；")]),t._v(" "),n("p",[t._v("或许你会觉得这个标准有点过于苛刻了，是有一点点，但为了创建出高性能的 "),n("code",[t._v("Web")]),t._v(" 应用，你的实际资源加载情况应该尽可能靠近这个目标。")]),t._v(" "),n("h2",{attrs:{id:"二、如何查看代码利用率"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、如何查看代码利用率"}},[t._v("#")]),t._v(" 二、如何查看代码利用率")]),t._v(" "),n("p",[t._v("也许你注意到了，这个指标术语是「代码利用率」，你可能是第一次听说这个概念，这里我解释一下它的计算方式：")]),t._v(" "),n("p",[n("code",[t._v("代码利用率 = 你页面中实际被执行的代码 / 你页面中引入的代码 * 100%")])]),t._v(" "),n("p",[t._v("你可能会困惑在实际开发中如何得到这个值，别担心，通过使用 "),n("code",[t._v("Chrome")]),t._v(" 开发者工具（很遗憾，目前只有 "),n("code",[t._v("Chrome")]),t._v(" 支持这一功能），你就可以迅速对你的 "),n("code",[t._v("Web")]),t._v(" 应用进行分析，得到当前页面下的代码利用率状态，步骤如下：")]),t._v(" "),n("ol",[n("li",[t._v("打开 "),n("code",[t._v("Chrome Dev Tool")]),t._v("；")]),t._v(" "),n("li",[t._v("按下 "),n("code",[t._v("Cmd + Shift + P or Ctrl + Shift + P")]),t._v(" ;")]),t._v(" "),n("li",[t._v("输入 "),n("code",[t._v("Coverage")]),t._v("，并选择第一个出现的选项；")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(384),alt:"20200505110750"}})]),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[t._v("点击面板上的 "),n("code",[t._v("reload")]),t._v(" 按钮，查看整个应用 "),n("code",[t._v("JavaScript")]),t._v(" 的代码利用率；")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(385),alt:"20200505110953"}})]),t._v(" "),n("h2",{attrs:{id:"三、提高代码使用率的关键技术-—-代码分割（code-splitting）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、提高代码使用率的关键技术-—-代码分割（code-splitting）"}},[t._v("#")]),t._v(" 三、提高代码使用率的关键技术 — 代码分割（code splitting）")]),t._v(" "),n("h3",{attrs:{id:"什么是「代码分割」（code-splitting）？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是「代码分割」（code-splitting）？"}},[t._v("#")]),t._v(" 什么是「代码分割」（code splitting）？")]),t._v(" "),n("p",[t._v("代码分割是指，将脚本中"),n("strong",[t._v("无需立即调用的代码")]),t._v("在"),n("strong",[t._v("代码构建")]),t._v("时转变为"),n("strong",[t._v("异步加载")]),t._v("的过程。")]),t._v(" "),n("p",[t._v("在 "),n("code",[t._v("Webpack")]),t._v(" 构建时，会避免加载已声明要"),n("strong",[t._v("异步加载")]),t._v("的代码，异步代码会被单独分离出一个文件，当代码实际调用时被加载至页面。")]),t._v(" "),n("h3",{attrs:{id:"代码分割的原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码分割的原理"}},[t._v("#")]),t._v(" 代码分割的原理")]),t._v(" "),n("p",[t._v("代码分割技术的核心是**「异步加载资源」"),n("strong",[t._v("，可喜的是，浏览器允许我们这么做，"),n("code",[t._v("W3C stage 3")]),t._v(" 规范："),n("code",[t._v("whatwg/loader")]),t._v(" 对其进行了定义：你可以通过 "),n("code",[t._v("import()")]),t._v(" 关键字让浏览器在程序执行时")]),t._v("异步加载**相关资源。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(386),alt:"20200505111143"}})]),t._v(" "),n("p",[t._v("没错，正如你所看到的， IE 浏览器目前并不支持这一特性，但这并不意味着你的异步加载功能在 IE 浏览会失效（那太可怕了 🤦‍♂️），实际上，"),n("code",[t._v("Webpack")]),t._v(" 底层帮你将"),n("strong",[t._v("异步加载的代码抽离成一份新的文件")]),t._v("，并在你需要时通过 "),n("code",[t._v("JSONP")]),t._v(" 的方式去获取文件资源，因此，你可以在任何浏览器上实现代码的异步加载，并且在将来所有浏览器都实现 "),n("code",[t._v("import()")]),t._v(" 方法时"),n("strong",[t._v("平滑过渡")]),t._v("，cool！👍")]),t._v(" "),n("h3",{attrs:{id:"代码分割的类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码分割的类型"}},[t._v("#")]),t._v(" 代码分割的类型")]),t._v(" "),n("p",[t._v("代码分割可以分为**「静态分割」"),n("strong",[t._v("和")]),t._v('「"动态"分割」'),n("strong",[t._v("两种方式，注意这里打了引号的 "),n("code",[t._v('"动态"')]),t._v('，因为实际上它并不意味着异步调用的代码是 "动态" 生成的，我们之后会看到 '),n("code",[t._v("Webpack")]),t._v(" 是如何做到这一点的，在那之前，让我们先看看")]),t._v("「静态代码分割」**。")]),t._v(" "),n("h3",{attrs:{id:"静态代码分割"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#静态代码分割"}},[t._v("#")]),t._v(" 静态代码分割")]),t._v(" "),n("p",[t._v("静态代码分割是指："),n("strong",[t._v("在代码中明确声明需要异步加载的代码")]),t._v("。")]),t._v(" "),n("p",[t._v("下面 👇 的代码说明了我们应该如何使用这一技术：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Listener "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./listeners.js'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getModal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/modal.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Listener"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'didSomethingToWarrentModalBeingLoaded'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Async fetching modal code from a separate chunk  getModal().then((module) => {    const modalTarget = document.getElementById('Modal')    module.initModal(modalTarget)  })})")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getModal")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./src/modal.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nListener"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'didSomethingToWarrentModalBeingLoaded'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Async fetching modal code from a separate chunk")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getModal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" modalTarget "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Modal'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("initModal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("modalTarget"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("正如你所看到的：每当你调用一个声明了异步加载代码的变量时，它总是返回一个 "),n("code",[t._v("Promise")]),t._v(" 对象。")]),t._v(" "),n("p",[t._v("⚠️ 注意：在 Vue 中，可以直接使用 "),n("code",[t._v("import()")]),t._v(" 关键字做到这一点，而在 "),n("code",[t._v("React")]),t._v(" 中，你需要使用 "),n("code",[t._v("react-loadable")]),t._v(" 去完成同样的事。")]),t._v(" "),n("p",[t._v("最后，让我们谈谈何时使用静态代码分割技术，这一技术适合以下的场景：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("你正在使用一个非常大的库或框架")]),t._v("：如果在页面初始化时你不需要使用它，就不要在页面初载时加载它；")]),t._v(" "),n("li",[n("strong",[t._v("任何临时的资源")]),t._v("：指不在页面初始化时被使用，被使用后又会立即被销毁的资源，例如模态框，对话框，"),n("code",[t._v("tooltip")]),t._v(" 等（任何一开始不显示在页面上的东西都可以有条件的加载）；")]),t._v(" "),n("li",[n("strong",[t._v("路由")]),t._v("：既然用户不会一下子看到所有页面，那么只把当前页面相关资源给用户就是个明智的做法；")])]),t._v(" "),n("p",[t._v('好了，现在你掌握了静态代码分割技术，现在让我们看看什么是「"动态"代码分割」技术。')]),t._v(" "),n("h3",{attrs:{id:"动态代码分割"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#动态代码分割"}},[t._v("#")]),t._v(" 动态代码分割")]),t._v(" "),n("p",[t._v("动态代码分割是指："),n("strong",[t._v("在代码调用时根据当前的状态，"),n("code",[t._v("「动态地」")]),t._v("异步加载对应的代码块")]),t._v("。")]),t._v(" "),n("p",[t._v("下面 👇 的代码说明了它具体是如何被实现的：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getTheme")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("themeName")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token template-string"}},[n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("./src/themes/")]),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("themeName"),n("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),n("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// using `import()` 'dynamically'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("feeling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stylish"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'stylish'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyTheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("feeling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trendy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'trendy'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("module")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("applyTheme")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("看到了吗，我们 "),n("strong",[t._v("动态")]),t._v(" 的声明了我们要"),n("strong",[t._v("异步加载")]),t._v("的代码块，这是怎么做到的？！答案出乎意料的简单，"),n("code",[t._v("Webpack")]),t._v(" 会在"),n("strong",[t._v("构建时")]),t._v("将你声明的目录下的"),n("strong",[t._v("所有可能分离的代码都抽象为一个文件")]),t._v("（这被称为 "),n("code",[t._v("contextModule")]),t._v(" 模块），因此无论你最终声明了调用哪个文件，本质上就"),n("strong",[t._v("和静态代码分割一样")]),t._v("，在请求一个早已准备好的，静态的文件。")]),t._v(" "),n("p",[t._v("下面是一些使用 "),n("strong",[t._v("动态")]),t._v(" 代码分割技术的场景：")]),t._v(" "),n("ol",[n("li",[n("strong",[t._v("A/B Test")]),t._v("：你不需要在代码中引入不需要的 UI 代码；")]),t._v(" "),n("li",[n("strong",[t._v("加载主题")]),t._v("：根据用户的设置，动态加载相应的主题；")]),t._v(" "),n("li",[n("strong",[t._v("为了方便")]),t._v("：本质上，你可以用静态代码分割代替「动态」代码分割，但是"),n("strong",[t._v("后者比前者拥有更少的代码量")]),t._v("；")])]),t._v(" "),n("h2",{attrs:{id:"四、魔术注释-魔法字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、魔术注释-魔法字符串"}},[t._v("#")]),t._v(" 四、魔术注释(魔法字符串)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://webpack.js.org/api/module-methods/#magic-comments",target:"_blank",rel:"noopener noreferrer"}},[t._v("魔术注释"),n("OutboundLink")],1),t._v("是由 "),n("code",[t._v("Webpack")]),t._v(" 提供的，可以为代码分割服务的一种技术。通过在 "),n("code",[t._v("import")]),t._v(" 关键字后的"),n("strong",[t._v("括号中使用指定注释")]),t._v("，我们可以"),n("strong",[t._v("对代码分割后的 chunk 有更多的控制权")]),t._v("，让我们看一个例子：")]),t._v(" "),n("p",[t._v("示例代码如下：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// index.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackChunkName: 'my-chunk-name' */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./footer'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("同时，也要在 "),n("code",[t._v("webpack.config.js")]),t._v(" 中做一些改动：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// webpack.config.js")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  output"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    filename"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bundle.js'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    chunkFilename"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'[name].lazy-chunk.js'")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("通过这样的配置，我们可以对分离出的 "),n("code",[t._v("chunk")]),t._v(" 进行"),n("strong",[t._v("命名")]),t._v("，这对于我们 "),n("code",[t._v("debug")]),t._v(" 而言非常方便。")]),t._v(" "),n("h3",{attrs:{id:"webpack-modes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack-modes"}},[t._v("#")]),t._v(" Webpack Modes")]),t._v(" "),n("p",[t._v("除了上面提到过得 "),n("code",[t._v("webpackChunkName")]),t._v(" 注释外，"),n("code",[t._v("Webpack")]),t._v(" 还提供了一些其他注释让我们能够对异步加载模块拥有更多控制权，例如下方这个例子：")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackChunkName: “my-chunk-name” */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackMode: lazy */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./someModule'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("webpackMode")]),t._v(" 的默认值为 "),n("code",[t._v("lazy")]),t._v(" 它会使所有异步模块都会被"),n("strong",[t._v("单独抽离成单一的 "),n("code",[t._v("chunk")])]),t._v("，若设置该值为 "),n("code",[t._v("lazy-once")]),t._v("，"),n("code",[t._v("Webpack")]),t._v(" 就会将所有"),n("strong",[t._v("带有标记的异步加载模块")]),t._v("放在同一个 "),n("code",[t._v("chunk")]),t._v(" 中。")]),t._v(" "),n("h3",{attrs:{id:"prefetch-or-preload"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prefetch-or-preload"}},[t._v("#")]),t._v(" Prefetch or Preload")]),t._v(" "),n("p",[t._v("通过添加 "),n("code",[t._v("webpackPrefetch")]),t._v(" 魔术注释，"),n("code",[t._v("Webpack")]),t._v(" 令我们可以使用与 "),n("code",[t._v('<link rel="prefetch">')]),t._v(" 相同的特性。让浏览器会在 "),n("code",[t._v("Idle")]),t._v(" 状态时"),n("strong",[t._v("预先帮我们加载所需的资源")]),t._v("，善用这个技术可以使我们的应用交互变得更加流畅。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* webpackPrefetch: true */")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./someModule'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("⚠️ 注意：你确保你的代码在未来一定会用到时，再开启该功能。")]),t._v(" "),n("h2",{attrs:{id:"最后"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[t._v("#")]),t._v(" 最后")]),t._v(" "),n("p",[t._v("文中若有不准确或错误的地方，欢迎指出，有兴趣可以的关注下"),n("a",{attrs:{href:"https://github.com/GolderBrother",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),n("OutboundLink")],1),t._v("~")])])}),[],!1,null,null,null);s.default=e.exports}}]);