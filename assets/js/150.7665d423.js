(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{583:function(t,s,e){"use strict";e.r(s);var a=e(1),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"node中的settimeout-和-setimmediate有什么区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node中的settimeout-和-setimmediate有什么区别"}},[t._v("#")]),t._v(" node中的setTimeout 和 setImmediate有什么区别")]),t._v(" "),e("p",[e("code",[t._v("setImmediate()")]),t._v(" 和 "),e("code",[t._v("setTimeout()")]),t._v(" 很类似，但是基于被调用的时机，他们也有不同表现。")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("setImmediate")]),t._v(" 设计在"),e("code",[t._v("poll阶段")]),t._v("完成时执行，即"),e("code",[t._v("check")]),t._v("阶段；")]),t._v(" "),e("li",[e("code",[t._v("setTimeout")]),t._v(" 设计在"),e("code",[t._v("poll阶段")]),t._v("为空闲时，且设定时间到达后执行，但它在"),e("code",[t._v("timer")]),t._v("阶段执行")])]),t._v(" "),e("p",[t._v("执行计时器的顺序将根据调用它们的上下文而异。如果二者都从主模块内调用，则计时器将受进程性能的约束。举个例子，有如下代码：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("上面代码应该先输出1，再输出2，但是实际执行的时候，结果却是不确定，有时还会先输出2，再输出1。")]),t._v(" "),e("p",[t._v("这是因为setTimeout的第二个参数默认为0。但是实际上，Node 做不到0毫秒，最少也需要1毫秒，根据官方文档，第二个参数的取值范围在"),e("strong",[t._v("1毫秒")]),t._v("到"),e("strong",[t._v("2147483647毫秒")]),t._v("之间。也就是说，"),e("code",[t._v("setTimeout(f, 0)")]),t._v("等同于"),e("code",[t._v("setTimeout(f, 1)")]),t._v("。")]),t._v(" "),e("p",[t._v("实际执行的时候，进入事件循环以后，有可能到了"),e("strong",[t._v("1毫秒")]),t._v("，也可能还没到"),e("strong",[t._v("1毫秒")]),t._v("，取决于系统当时的状况。如果没到"),e("strong",[t._v("1毫秒")]),t._v("，那么 "),e("code",[t._v("timers")]),t._v(" 阶段就会跳过，先进入 "),e("code",[t._v("check")]),t._v(" 阶段，先执行"),e("code",[t._v("setImmediate")]),t._v("的回调函数。")]),t._v(" "),e("p",[t._v("但是，如果是这样的情况，输出顺序就固定了，例：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setImmediate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("在上述代码中，一定是先输出2，再输出1。因为两个代码写在 "),e("code",[t._v("IO 回调")]),t._v("中，"),e("code",[t._v("IO 回调")]),t._v("是在 "),e("code",[t._v("poll")]),t._v(" 阶段执行，当回调执行完毕后队列为空，发现存在 "),e("code",[t._v("setImmediate")]),t._v(" 回调，所以就直接跳转到 "),e("code",[t._v("check")]),t._v(" 阶段去执行回调("),e("code",[t._v("setImmediate回调")]),t._v(")了，执行完成后再去到 "),e("code",[t._v("timers")]),t._v(" 阶段，然后执行"),e("code",[t._v("setTimeout")]),t._v("。")]),t._v(" "),e("p",[t._v("node时事件循环的"),e("strong",[t._v("三大重点阶段")]),t._v("：")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("定时器时间到了，才执行回调"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("poll")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("执行"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),t._v("相关的回调"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("check")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("执行setImmediate回调"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),e("p",[e("code",[t._v("setImmediate()")]),t._v("约等于"),e("code",[t._v("setTimeout(()=>{}, 0)")]),t._v("， 都是"),e("strong",[t._v("异步执行")]),t._v("，不同的是"),e("code",[t._v("setTimeout")]),t._v("在"),e("code",[t._v("timer")]),t._v("阶段执行，而"),e("code",[t._v("setImmediate")]),t._v("是在"),e("code",[t._v("nodejs")]),t._v("的"),e("code",[t._v("check")]),t._v("阶段执行。如果"),e("code",[t._v("setTimeout")]),t._v("设置成"),e("code",[t._v("0")]),t._v("，那么他们的执行顺序是: 有可能前有可能后是不确定的。这是因为"),e("code",[t._v("setTimeout")]),t._v("设置为0也需要"),e("strong",[t._v("1ms")]),t._v("才能执行（"),e("strong",[t._v("浏览器是4ms")]),t._v("），而"),e("code",[t._v("event loop")]),t._v("的启动从"),e("code",[t._v("timer")]),t._v(", "),e("code",[t._v("I/O(poll)")]),t._v(",到 "),e("code",[t._v("check")]),t._v(" 时间有可能多大于"),e("code",[t._v("1ms")]),t._v("，如果大于"),e("code",[t._v("1ms")]),t._v("，这时 "),e("code",[t._v("timeout")]),t._v(" 是"),e("code",[t._v("1ms")]),t._v("，已经符合执行条件 "),e("code",[t._v("setTimeout")]),t._v(" 会"),e("strong",[t._v("立即执行")]),t._v("，然后接着执行 "),e("code",[t._v("check")]),t._v(" 阶段的 "),e("code",[t._v("setImmediate")]),t._v(" 。如果 "),e("code",[t._v("event loop")]),t._v(" 启动后到了 "),e("code",[t._v("poll")]),t._v(" 阶段，耗时小于"),e("code",[t._v("1ms")]),t._v("，比如用了"),e("code",[t._v("0.8ms")]),t._v(",那么这时 "),e("code",[t._v("settimeout")]),t._v(" 是"),e("code",[t._v("1ms")]),t._v("，不符合条件跳到 "),e("code",[t._v("check")]),t._v(" 阶段先执行"),e("code",[t._v("setImmediate")]),t._v("然后再执行 "),e("code",[t._v("setTimeout")]),t._v(" 。如果这两个事件调用是在某个 "),e("code",[t._v("I/O")]),t._v(" 类的函数中，那么他们的执行顺序就是"),e("strong",[t._v("固定")]),t._v("的，不会出现在前后执行的不确定性。")])])}),[],!1,null,null,null);s.default=n.exports}}]);